
1D_heat_diffusion.py,2739
import numpy as npnp2,36
class Grid:Grid10,228
    def __init__(self,lx,ly,lz,ncv):__init__12,241
        def ncv(self):ncv43,1344
        def xf(self):xf48,1465
        def xP(self):xP53,1568
        def dx_WP(self):dx_WP58,1671
        def dx_PE(self):dx_PE62,1762
        def Af(self):Af66,1851
        def Aw(self):Aw71,1950
        def Ae(self):Ae76,2060
        def Ao(self):Ao81,2168
        def vol(self):vol86,2273
class ScalarCoeffs:ScalarCoeffs93,2424
    def __init__(self,ncv):__init__94,2444
    def zero(self):zero104,2706
    def accumulate_aP(self,aP):accumulate_aP111,2877
    def accumulate_aW(self,aW):accumulate_aW115,2969
    def accumulate_aE(self,aE):accumulate_aE119,3065
    def accumulate_rP(self,rP):accumulate_rP123,3157
    def ncv(self):ncv128,3267
    def aP(self):aP133,3371
    def aW(self):aW138,3455
    def aE(self):aE143,3548
    def rP(self):rP148,3637
class BoundaryLocation(Enum):BoundaryLocation154,3775
    WEST = 1WEST155,3805
    EAST = 2EAST156,3818
class DirichletBC:DirichletBC160,3872
    def __init__(self,phi,grid,value,loc):__init__161,3891
    def value(self):value173,4188
    def coeff(self):coeff177,4283
    def apply(self):apply181,4369
class NeumannBC:NeumannBC191,4719
    def __init__(self,phi,grid,gradient,loc):__init__192,4736
    def value(self):value204,5068
    def coeff(self):coeff214,5485
    def apply(self):apply218,5571
class RobinBC:RobinBC227,5998
    def __init__(self,phi,grid,h,k,tinfty, loc):__init__228,6013
    def value(self):value244,6441
    def coeff(self):coeff254,6947
    def apply(self):apply258,7033
class DiffusionModel:DiffusionModel270,7642
    def __init__(self,grid,phi,gamma,west_bc,east_bc):__init__271,7664
    def add(self,coeffs):add280,7974
def get_sparse_matrix(coeffs):get_sparse_matrix309,9073
def solve(coeffs):solve346,9960
lx = 1.0lx360,10223
ly = 0.1ly361,10232
lz = 0.1lz362,10241
ncv = 10ncv363,10250
grid = Grid(lx,ly,lz,ncv)grid364,10259
maxIter = 100maxIter367,10336
converged=1e-6converged368,10350
k = 0.1k371,10387
coeffs = ScalarCoeffs(grid._ncv)coeffs374,10411
T0 = 300T0377,10467
T = T0*np.ones(grid._ncv+2)T380,10514
west_bc = DirichletBC(T, grid, 400, BoundaryLocation.WEST)west_bc383,10566
east_bc = DirichletBC(T, grid, 300, BoundaryLocation.EAST)east_bc384,10625
T_solns = [np.copy(T)]T_solns392,10798
diffusion = DiffusionModel(grid, T, k, west_bc, east_bc)diffusion395,10853
    coeffs = diffusion.add(coeffs)coeffs401,11028
    maxResid = norm(coeffs.rP, np.inf)maxResid404,11113
    avgResid = np.mean(np.absolute(coeffs.rP))avgResid405,11152
    dT = solve(coeffs)dT411,11369
