* STEADY DIFFUSION EQUATIONS
** Problem Definition
   We consider the solution of a _steady_, _1D_ heat diffusion equation
   #+BEGIN_EXPORT latex
   \begin{equation}
   -k \nabla^2 T - S = 0
   \end{equation}
   #+END_EXPORT
** Discretization
   Recall our diffusion term can be discretized as:
   #+BEGIN_EXPORT latex
   \begin{equation}
   \int_S \textbf{J} \cdot \textbf{n} dS \approx \sum_{i=0}^{N_{ip}-1} \textbf{J}_{ip}\cdot \textbf{n}_{ip}A_{ip}
   \end{equation}
   #+END_EXPORT
   Our flux $\textbf{J}$ here is the _diffusive_ flux, so: $\textbf{J} = -k \nabla T$. Thus:
   #+BEGIN_EXPORT latex
   \begin{equation}
   \int_S \textbf{J} \cdot \textbf{n} dS \approx -\sum_{i=0}^{N_{ip}-1} k_{ip} \nabla T_{ip}  \cdot \textbf{n}_{ip}A_{ip}
   \end{equation}
   #+END_EXPORT
   We assume constant thermal conductivity, $k_{ip} = k$. A 1D control volume, with West/East faces and unit vectors drawn, is shown below:
  #+BEGIN_EXPORT latex
  \begin{center}
  \includegraphics[scale=0.2]{../pic/heat1D_CV.png}
  \end{center}
  #+END_EXPORT
  Since we are in 1D, our unit vector is in the $\textbf{i}$ only.\\
  Thus, $\nabla T \cdot \textbf{n} = \nabla T \cdot \textbf{i}$.\\
  But, $\nabla T \cdot \textbf{i} = \left < \frac{\partial T}{\partial x} \textbf{i} + \frac{\partial T}{\partial y} \textbf{j} + \frac{\partial T}{\partial z} \textbf{k}
  \right > \cdot \left <1 \textbf{i} + 0 \textbf{j} + 0 \textbf{k}    \right> = \frac{\partial T}{\partial x}$. \\
  With these points in mind, the discretization for the diffusion term is simplified to:
  #+BEGIN_EXPORT latex
  \begin{equation}
  \int_S \textbf{J} \cdot \textbf{n} dS \approx k \left .\frac{\partial T}{\partial x}\right|_w A_w
  - k \left .\frac{\partial T}{\partial x}\right|_e A_e 
  \end{equation}
  #+END_EXPORT
  The diagram below shows the cell locations and the nomenclature for the distance between them, note how $\Delta x$ is center-center
  #+BEGIN_EXPORT latex
  \begin{center}
  \includegraphics[scale=0.2]{../pic/heat1D_cell.png}
  \end{center}
  #+END_EXPORT
  We apply _finite differences_ to the derivatives in the diffusion term, i.e.:
  #+BEGIN_EXPORT latex
  \begin{equation}
  k \left .\frac{\partial T}{\partial x}\right|_w A_w - k \left .\frac{\partial T}{\partial x}\right|_e A_e
  = k\frac{T_P-T_W}{\Delta x_{WP}}A_w - k\frac{T_E-T_P}{\Delta x_{PE}}A_e
  \end{equation}
  #+END_EXPORT
  Our discretized source term is simply:
  #+BEGIN_EXPORT latex
  \begin{equation}
  \int_V SdV \approx S_PV_P
  \end{equation}
  #+END_EXPORT
  where $S_P$ = value of source term *within* the cell, and $V_P$ = cell volume.\\
  Put everything on one side, we can form the _residual equation_ for the cell $\textbf{P}$ as:
  #+BEGIN_EXPORT latex
  \begin{equation}
  r_P = - k\frac{T_E-T_P}{\Delta x_{PE}}A_e + k\frac{T_P-T_W}{\Delta x_{WP}}A_w - S_PV_P
  \end{equation}
  #+END_EXPORT
  or expressing in terms of the diffusive fluxes, $\textbf{F}^d$, through each face:
  #+BEGIN_EXPORT latex
  \begin{equation}
  r_P = F_{e}^d - F_{w}^d - S_PV_P
  \end{equation}
  #+END_EXPORT
  where:\\
  #+BEGIN_EXPORT latex
  \begin{alignat}{2}
  F_{e}^d &= - k\frac{T_E-T_P}{\Delta x_{PE}}A_e &&= -D_e(T_E- T_P)\\
  F_{w}^d &= - k\frac{T_P-T_W}{\Delta x_{WP}}A_w &&= -D_w(T_P- T_W)\\
  D_e &= \frac{kA_e}{\Delta x_{PE}}\\
  D_w &= \frac{kA_w}{\Delta x_{WP}}
  \end{alignat}
  #+END_EXPORT
  Our cell residual equation is then:
  #+BEGIN_EXPORT latex
  \begin{equation}
  r_P = D_w (T_P-T_W)-D_e(T_E-T_P)-S_PV_P
  \end{equation}
  #+END_EXPORT
  The linearized coefficients are then calculated as:
  #+BEGIN_EXPORT latex
  \begin{align}
  a_P &= \frac{\partial r_P}{\partial T_P} = D_w + D_e - \frac{\partial S_P}{\partial T_P}V_P\\
  a_W &= \frac{\partial r_P}{\partial T_W} = -D_w\\
  a_E &= \frac{\partial r_P}{\partial T_E} = -D_e
  \end{align}
  #+END_EXPORT
  Recall that we can form an algebraic system of equation for each control volume like this:
  #+BEGIN_EXPORT latex
  \begin{align}
  a_P\delta \phi_P + \sum_{nb} a_{nb}\delta \phi_{nb} &= -r_P\\
  a_P\delta T_P + a_W\delta T_W + a_E \delta T_E &= -r_P 
  \end{align}
  #+END_EXPORT
  The above linear system of equations can be written as as tridiagonal matrix, like this:
  #+BEGIN_EXPORT latex
  \begin{center}
  \includegraphics[scale=0.2]{../pic/heat1D_tridiagonal.png}
  \end{center}
  #+END_EXPORT
  *Note*: The first and last row only has 2 non zero elements each. This is because these are the left most/right most side and they are
  adjacent to the domain boundary. Therefore, special _boundary conditions_ are needed to be set. \\
  In matrix notation, we are solving:
  #+BEGIN_EXPORT latex
  \begin{equation}
  \textbf{A}\textbf{x} = \textbf{b}  
  \end{equation}
  #+END_EXPORT
  where $\textbf{A}$ is the Jacobian matrix, $\textbf{b} = \textbf{-r}$ is the residual vector, $\textbf{x} = \delta \textbf{T}$
  is the solution correction. At each current iteration $i$, the solution is updated according to:
  #+BEGIN_EXPORT latex
  \begin{equation}
  \textbf{T} = \textbf{T}_i + \delta \textbf{T}i
  \end{equation}
  #+END_EXPORT
** Source Terms
   Our source term can have many forms, depending on the type of heat source. We will assume /external convection/
   and /radiation exchange/:
   * For external convection:
     #+BEGIN_EXPORT latex
     \begin{equation}
     \frac{S_{conv,P}}{V_P} = -hA_0(T_P-T_{\infty,c})
     \end{equation}
     #+END_EXPORT
     where:
     - $h$ is the convective coefficient.
     - $A_0$ is external surface area of the cell $P$.
     - $T_P$ is temperature at the centroid of cell $P$.
     - $T_{\infty,c}$ is the ambient temperature for the convection process. 
   * For radiation exchange:
     #+BEGIN_EXPORT latex
     \begin{equation}
     \frac{S_{rad}}{V_P} = -\epsilon \sigma A_0(T_P^4 - T_{\infty,r}^4)
     \end{equation}
     #+END_EXPORT
     where:
     - $\epsilon$ is the surface emissivity.
     - $\sigma$ is the Stefan-Boltzmann constant.
     - $T_{\infty,r}$ is the surrounding temperature for radiation exchange. 
** Discussion of Discretization Procedure
*** Temperature Profile Assumptions
    When computing the diffusive fluxes through the faces, we assumed a *piecewise-linear profile* for the temperature.
    This ensures that the derivatives are defined at the integration points and provides consistency for flux
    at control-volume faces. For the source term, *piece-wise constant profile* is used, implying a single value of the source
    term in each cell. Note that for piece-wise constant profile, the derivatives are not defined at integration points, due to
    jump discontinuity. So if fluxes will be inconsistent if piecewise-constant profile is used for temperature.
    #+BEGIN_EXPORT latex
    \begin{center}
    \includegraphics[scale=0.2]{../pic/heat1D_profilePW.png}
    \end{center}
    #+END_EXPORT
*** Implementation of Linearization
    In Patakar's method, the solution of the linear system *is* the solution for the variables at the control volume center.\\
    In our method, the solution of the linear system is the *correction* to apply to the previous iteration of the solution. \\
    The correction method is preferred because:
    * at convergence, the solution for the correction goes to zero $\rightarrow$ zero a good initial guess for the linear solver.
    * linear system involves the residual vector. In Patankar's, there are more work to calculate the residual vector.
*** Properties of the Discrete Algebraic Equations
    Recall our algebraic equation for the linear system
    #+BEGIN_EXPORT latex
    \begin{equation}
    a_P\delta T_P + a_W\delta T_W + a_E \delta T_E = -r_P 
    \end{equation}
    #+END_EXPORT
    In Rule 2, we require that $a_P > 0$ and $a_W, a_E < 0$. The reason for this is if we consider the case with no source,
    and the solution converge, $r_P \rightarrow 0$:
    #+BEGIN_EXPORT latex
    \begin{equation}
    a_P\delta T_P = -a_W\delta T_W - a_E \delta T_E  
    \end{equation}
    #+END_EXPORT
    Now, suppose both $T_P$ and $T_E$ are pertubed.  If either of these temperatures were to rise, then $T_P$ would also rise.
    Similarly, if either temperatures were to drop, $T_P$ should also drop. Therefore, to ensure correct physical effect, if
    $a_P > 0$ then $a_W, a_E > 0$.\\
    Consider the two cells ($P$ and $E$) below:
    #+BEGIN_EXPORT latex
    \begin{center}
    \includegraphics[scale=0.2]{../pic/heat1D_cell_combined.png}
    \end{center}
    #+END_EXPORT
    At convergence, $r_P = 0$, the equation for the control volume $P$ is:
    #+BEGIN_EXPORT latex
    \begin{equation}
    F_{e,P}^d - F_{w,P}^d - S_PV_P = 0
    \end{equation}
    #+END_EXPORT
    For the control volume $E$:
    #+BEGIN_EXPORT latex
    \begin{equation}
    F_{e,E}^d - F_{w,E}^d - S_EV_E = 0
    \end{equation}
    #+END_EXPORT
    Adding these equations together gives:
    #+BEGIN_EXPORT latex
    \begin{equation}
    F_{e,P}^d - F_{w,P}^d +  F_{e,E}^d - F_{w,E}^d- S_PV_P - S_EV_E = 0
    \end{equation}
    #+END_EXPORT
    Note that $F_{e,P}^d = F_{w,E}^d$ by continuity, i.e. the flux at cell $P$ going eastward should be the same flux going
    from westward at cell $E$. If these are not equal, then it implies that there is a fictuous force at the face, which is
    not reasonable. Therefore, our algebraic equation for control volume $P$ and $E$ becomes:
    #+BEGIN_EXPORT latex
    \begin{equation}
     F_{e,E}^d - F_{w,P}^d - S_PV_P - S_EV_E = 0
    \end{equation}
    #+END_EXPORT
    The above equation demonstrates integral conservation: a balance of the total source term within the combined control volume with
    the net diffusive flux from that same control volume. In addition, recall the definition of the diffusive flux:
    #+BEGIN_EXPORT latex
    \begin{align}
    F_{e,P}^d &= -k \frac{T_E-T_P}{\Delta x_{PE}} A_{e,P}\\
    F_{w,E}^d &= -k \frac{T_E-T_P}{\Delta x_{PE}} A_{w,E}
    \end{align}
    #+END_EXPORT
    From the gemeotry of the grid, $A_{e,P} = A_{w,E}$; therefore, it is in fact the two-point finite difference estimation of the
    derivative that cause the fluxes to be equal. This is also due to the piecewise-linear profile that we assume. If we assume a
    *parabolic profile* instead, there is no guarantee that the fluxes would be equal. Instead, we would have:
    #+BEGIN_EXPORT latex
    \begin{align}
    F_{e,P}^d &= f(T_W, T_P, T_E)\\
    F_{w,E}^d &= f(T_P, T_E, T_{EE})
    \end{align}
    #+END_EXPORT
    This means that the flux through the common face depends on different temperature, so we cannot be sure that the derivative from either
    side is consistent. 
    #+BEGIN_EXPORT latex
    \begin{center}
    \includegraphics[scale=0.2]{../pic/heat1D_profilePARABOLIC.png}
    \end{center}
    #+END_EXPORT
** Implemenation
  #+BEGIN_EXPORT latex
  \lstinputlisting[language=Python]{../code/1D_heat_diffusion_steady.py}
  #+END_EXPORT
